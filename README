MOSTLY DEPRECATED -- Steps 1-3 are now automated via launch.json. But keeping
this here just for informational purposes.

IMPORTANT: for debugging in vs code, make sure the env variable GEVENT_SUPPORT is set to True.

To run, execute the following command in the nudgie directory

1) Start Django server
py manage.py runserver

2) Start Celery Worker
celery -A Nudgie worker -l INFO --pool=gevent -Q nudgie

the -A tasks indicates that the application is called "tasks". also this will tell it to look in the tasks.py file.
Note too that I set this worker thread to pull from the nudgie queue.

3) Start Celery Beat
celery -A Nudgie beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler

You can check the existing queues by going to the rabbit CLI and running rabbitmqctl list_queues
You can verify that the rabbit node/process if running by doing rabbitmqctl status
if it's offline, you can do rabbitmqctl start_app
To stop it or restart it, the following commands are relevant:
rabbitmqctl shutdown (this shuts down rabbitMQ and its runtime)
rabbitmqctl stop_app (stops rabbitMQ but leaves the runtime, aka the erlang VM, running)

admin
username: drew
email: awhhung@gmail.com
password: bung